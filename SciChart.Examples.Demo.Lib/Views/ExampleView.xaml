<UserControl x:Class="SciChart.Examples.Demo.Lib.Views.ExampleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             xmlns:ext="http://schemas.abtsoftware.co.uk/scichart/exampleExternals"
             xmlns:tz="http://schemas.abtsoftware.co.uk/transitionz"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:controls="clr-namespace:SciChart.Examples.Demo.Lib.Controls"                  
             xmlns:extensions="clr-namespace:SciChart.Examples.Demo.Lib.Extensions"
             xmlns:navigation="clr-namespace:SciChart.Examples.Demo.Lib.Helpers.Navigation"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:views="clr-namespace:SciChart.Examples.Demo.Lib.Views"
             AutomationProperties.AutomationId="ExampleView">

    <UserControl.Resources>

        <ext:ScrollViewerWidthMultiConverter x:Key="multiplyConverter" />

        <Style x:Key="DescriptionBoxAnimatedExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid x:Name="ExpanderContentRoot">
                            <Grid.Tag>
                                <system:Double>0.0</system:Double>
                            </Grid.Tag>
                            <Grid.Width>
                                <MultiBinding Converter="{StaticResource multiplyConverter}">
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Grid.Width>
                            <ContentPresenter x:Name="ExpandSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="false" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.4"
                                                             Storyboard.TargetName="ExpanderContentRoot"
                                                             Storyboard.TargetProperty="Tag"
                                                             To="270" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.4"
                                                             Storyboard.TargetName="ExpanderContentRoot"
                                                             Storyboard.TargetProperty="Tag"
                                                             To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolbarSeparatorStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="Width" Value="1"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Fill" Value="{DynamicResource MainToolbarSeparatorBrush}"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <s:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <ext:BoolToValueConverter x:Key="BoolToValueVisibilityConverter"
                                  FalseValue="Collapsed"
                                  TrueValue="Visible" />

        <SolidColorBrush x:Key="DialogBackground"
                         Opacity="0.8"
                         Color="{DynamicResource ApplicationBackgroundColor}" />

        <ElasticEase x:Key="BounceEase" Oscillations="1" />

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="36"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Breadcrumb / Toolbar -->
        <Border Grid.Row="0"
                Panel.ZIndex="0"
                SnapsToDevicePixels="True"
                BorderThickness="0,0,0,1"
                BorderBrush="{DynamicResource BreadcrumbSeparatorBrush}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Breadcrumb -->
                <controls:Breadcrumb Grid.Column="0"
                                     Margin="20,0,10,0"
                                     BreadcrumbItems="{Binding Path=BreadCrumbViewModel.BreadCrumbItemViewModels}"
                                     HomeCommand="{Binding Path=BreadCrumbViewModel.BreadCrumbItemViewModels[0].Command}">

                    <controls:Breadcrumb.BreadcrumbItemStyle>
                        <Style TargetType="Button" BasedOn="{StaticResource BreadcrumbButtonStyle}">
                            <Setter Property="controls:Breadcrumb.IsItemSelected" Value="{Binding IsSelected}"/>
                            <Setter Property="Command" Value="{Binding Command}"/>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock FontSize="11"
                                                   FontWeight="SemiBold"
                                                   TextTrimming="CharacterEllipsis"
                                                   Text="{Binding Path=DataContext.Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </controls:Breadcrumb.BreadcrumbItemStyle>
                </controls:Breadcrumb>

                <!-- Toolbar -->
                <StackPanel Grid.Column="1" Orientation="Horizontal">

                    <!-- Send Feedback -->
                    <Button Command="{Binding SendFeedbackCommand}"
                            Style="{StaticResource MainToolbarButtonStyle}"
                            ToolTipService.ToolTip="Send us some feedback! Your encouragement goes a long way!">

                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconMaterial Kind="CommentQuoteOutline" Height="16" Width="16" Margin="0,2,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="11" FontWeight="SemiBold" Text="Send Feedback"/>
                        </StackPanel>
                    </Button>

                    <Rectangle Style="{StaticResource ToolbarSeparatorStyle}"/>

                    <!-- Show Example -->
                    <ToggleButton IsChecked="{Binding ShowExample, Mode=TwoWay}"
                                  Style="{StaticResource MainToolbarToggleButtonStyle}"
                                  ToolTipService.ToolTip="Switch back to example view">

                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconMaterial Kind="ChartMultiline" Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="11" FontWeight="SemiBold" Text="Example"/>
                        </StackPanel>
                    </ToggleButton>

                    <Rectangle Style="{StaticResource ToolbarSeparatorStyle}"/>

                    <!-- Show Source Code -->
                    <ToggleButton IsChecked="{Binding ShowSourceCode, Mode=TwoWay}"
                                  Style="{StaticResource MainToolbarToggleButtonStyle}"
                                  ToolTipService.ToolTip="View the Source Code for this example right here in the app">

                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconMaterial Kind="CodeTags" Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="11" FontWeight="SemiBold" Text="Source Code"/>
                        </StackPanel>
                    </ToggleButton>

                    <Rectangle Style="{StaticResource ToolbarSeparatorStyle}"/>

                    <!-- Export -->
                    <Button AutomationProperties.AutomationId="ExampleView.Export"
                            Command="{Binding ExportExampleCommand}"
                            Style="{StaticResource MainToolbarButtonStyle}" 
                            ToolTipService.ToolTip="Export this example to a standalone Visual Studio solution">

                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconMaterial Kind="ExportVariant" Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="11" FontWeight="SemiBold" Text="Export Solution"/>
                        </StackPanel>
                    </Button>

                    <Rectangle Style="{StaticResource ToolbarSeparatorStyle}"/>

                    <Button Command="{Binding ShowGithubCommand}"
                            Style="{StaticResource MainToolbarButtonStyle}"
                            ToolTipService.ToolTip="Visit the GitHub page where this example code lives">

                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconMaterial Kind="Github" Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="11" FontWeight="SemiBold" Text="GitHub"/>
                        </StackPanel>
                    </Button>

                    <Rectangle Style="{StaticResource ToolbarSeparatorStyle}"/>

                    <Button Command="{Binding GoToDocumentationCommand}"
                            Style="{StaticResource MainToolbarButtonStyle}"
                            ToolTipService.ToolTip="Go to Documentation">

                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconMaterial Kind="FileDocumentOutline" Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="11" FontWeight="SemiBold" Text="Documentation"/>
                        </StackPanel>
                    </Button>

                    <Rectangle Style="{StaticResource ToolbarSeparatorStyle}"/>

                    <!-- Info Panel -->
                    <ToggleButton x:Name="InfoPanelButton"
                                  IsChecked="{Binding IsInfoVisible, Mode=TwoWay}"
                                  Style="{StaticResource MainToolbarToggleButtonStyle}">

                        <StackPanel Orientation="Horizontal">
                            <icons:PackIconMaterial Kind="Information" Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Margin="5,0,20,0" VerticalAlignment="Center" FontSize="11" FontWeight="SemiBold" Text="Info"/>
                        </StackPanel>
                    </ToggleButton>
                </StackPanel>
            </Grid>
        </Border>

        <Grid x:Name="ExampleAndSourceCodeFrame"
              Grid.Row="1"
              Panel.ZIndex="1"
              Background="{DynamicResource InfoPanelBackgroundBrush}"
              tz:Transitionz.Blur="{Binding Path=BackgroundBlurParams, Mode=OneWay}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Source Code View -->
            <views:SourceCodeView Grid.Column="0"
                                  HorizontalAlignment="Stretch"
                                  tz:Transitionz.Opacity="{tz:OpacityParams From=0, To=1, Duration=100, TransitionOn=Visibility}"
                                  tz:Transitionz.Visibility="{Binding Path=ShowSourceCode, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <!-- Description / Info Box -->
            <Expander x:Name="DescriptionBoxExpander"
                      Grid.Column="1"
                      Margin="-1,0"
                      ExpandDirection="Left"
                      IsExpanded="{Binding ElementName=InfoPanelButton, Path=IsChecked}"
                      Style="{StaticResource DescriptionBoxAnimatedExpanderStyle}">

                <Border x:Name="DescriptionBox"
                        Width="270"
                        BorderThickness="0"      
                        Background="{DynamicResource InfoPanelBackgroundBrush}"
                        SizeChanged="OnExamplesPopupSizeChanged">

                    <Grid Margin="0,20,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" Margin="20,0,10,0" Width="30" Height="30">
                            <ContentPresenter Content="{Binding}" ext:ContentPresenterHelper.ContentTemplate="{Binding SelectedExample.IconPath}"/>
                        </Viewbox>

                        <TextBlock Grid.Column="1"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   TextWrapping="Wrap"
                                   Text="{Binding SelectedExample.Title}"
                                   Style="{StaticResource TipsHeaderTextBlockStyle}"/>

                        <Button Grid.Column="2"
                                Margin="20,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Command="{Binding HideDescriptionCommand}"
                                Style="{StaticResource CloseButtonStyle}"/>

                        <ScrollViewer Grid.Row="1"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="3"
                                      Margin="20,20,2,2"
                                      HorizontalScrollBarVisibility="Disabled"
                                      VerticalScrollBarVisibility="Auto">

                            <RichTextBox Margin="-5,0,15,20"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Foreground="#FFC2C4CB"                                    
                                         IsReadOnly="True" 
                                         HorizontalScrollBarVisibility="Disabled"
                                         VerticalScrollBarVisibility="Disabled"
                                         extensions:RichTextBoxExtensions.Text="{Binding SelectedExample.FormattedDescription}"/>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </Expander>

            <!-- Example Frame -->
            <navigation:TransitioningFrame x:Name="ExamplesFrame"
                                           Grid.Column="0"
                                           HorizontalAlignment="Stretch"
                                           IsHitTestVisible="True"
                                           Margin="0"
                                           Style="{StaticResource transitioningFrameStyle}"
                                           AutomationProperties.AutomationId="ExampleView.TransitioningFrame"
                                           tz:Transitionz.Opacity="{tz:OpacityParams From=0, To=1, Duration=100, TransitionOn=Visibility}"
                                           tz:Transitionz.Visibility="{Binding Path=ShowExample, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           navigation:Navigator.ExampleStartPage="{Binding SelectedExample.PageId, Mode=OneTime}"/>
        </Grid>

        <Border Grid.Row="1"
                Opacity="0"
                Panel.ZIndex="2"
                Background="{DynamicResource MetroWindowDialogViewBackgroundBrush}"   
                tz:Transitionz.Opacity="{tz:OpacityParams Duration=200, From=0, To=1, TransitionOn=Visibility}"
                tz:Transitionz.Visibility="{Binding Path=FeedbackViewModel.IsFeedbackVisible, Converter={StaticResource BoolToValueVisibilityConverter}}">

            <views:FeedbackView HorizontalAlignment="Center" VerticalAlignment="Center" DataContext="{Binding FeedbackViewModel}"/>
        </Border>

        <Border Grid.Row="1"
                Opacity="0"
                Panel.ZIndex="2"
                Background="{DynamicResource MetroWindowDialogViewBackgroundBrush}"    
                tz:Transitionz.Opacity="{tz:OpacityParams Duration=200, From=0, To=1, TransitionOn=Visibility}"
                tz:Transitionz.Visibility="{Binding Path=ExportExampleViewModel.IsExportVisible, Converter={StaticResource BoolToValueVisibilityConverter}}">

            <views:ExportExampleView HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     AutomationProperties.AutomationId="ExportExampleView"
                                     DataContext="{Binding ExportExampleViewModel}"/>
        </Border>

        <Border Grid.Row="1"
                Opacity="0"
                Panel.ZIndex="2"
                Background="{DynamicResource MetroWindowDialogViewBackgroundBrush}"      
                tz:Transitionz.Opacity="{tz:OpacityParams From=0, To=1, Duration=200, TransitionOn=Visibility}"
                tz:Transitionz.Visibility="{Binding Path=BreadCrumbViewModel.IsShowingBreadcrumbNavigation, Converter={StaticResource BooleanToVisibilityConverter}}">

            <views:ExampleNavigationView HorizontalAlignment="Center" VerticalAlignment="Center" DataContext="{Binding BreadCrumbViewModel}"/>
        </Border>

        <Border Grid.Row="1"
                Grid.ColumnSpan="2"
                Opacity="1"
                Panel.ZIndex="2"
                Background="{DynamicResource MetroWindowDialogViewBackgroundBrush}"    
                tz:Transitionz.Opacity="{tz:OpacityParams Duration=200, From=0, To=1, TransitionOn=Visibility}"
                tz:Transitionz.Visibility="{Binding Path=IsShowingHelp, Converter={StaticResource BooleanToVisibilityConverter}}">

            <views:TipsView tz:Transitionz.Translate="{tz:TranslateParams Duration=400, From='50,0', To='0,0', Ease={StaticResource BounceEase}, TransitionOn=Loaded}" />
        </Border>
    </Grid>
</UserControl>
