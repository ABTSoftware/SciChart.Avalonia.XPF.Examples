<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:controls="clr-namespace:SciChart.Examples.Demo.Lib.Controls"
                    xmlns:converters="clr-namespace:SciChart.Examples.Demo.Lib.Common.Converters">

    <converters:IconSizeConverter x:Key="IconSizeConverter" SizeMultiplier="0.5"/>

    <Style x:Key="DevModeButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="Background" Value="{DynamicResource DevModeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DevModeButtonForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DevModeButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Border x:Name="Border"
                                CornerRadius="5"
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>

                        <ContentPresenter x:Name="ContentHost"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DevModeButtonMouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource DevModeButtonMouseOverBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DevModeButtonMouseOverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExportExampleButtonStyle" BasedOn="{StaticResource DevModeButtonStyle}" TargetType="Button">
        <Setter Property="Width" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="SubmitFeedbackButtonStyle" BasedOn="{StaticResource DevModeButtonStyle}" TargetType="Button">
        <Setter Property="Width" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="NavigationButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource NavigationButtonForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource NavigationButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationButtonBorderBrush}"/>
        <Setter Property="Width" Value="46"/>
        <Setter Property="Height" Value="46"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="1"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="5">

                        <ContentPresenter x:Name="ContentHost"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          VerticalAlignment="Center"                                         
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource NavigationButtonMouseOverBorderBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource NavigationButtonMouseOverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource NavigationButtonMouseOverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HomeButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Home" Height="18" Width="18"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="ChevronLeft" Height="12" Width="12"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NextButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="ChevronRight"  Height="12" Width="12"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Cog" Height="18" Width="18"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BreadcrumbButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource BreadcrumbForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter x:Name="ContentHost"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          VerticalAlignment="Center"                                         
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:Breadcrumb.IsItemSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BreadcrumbSelectedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BreadcrumbMouseOverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainToolbarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource MainToolbarForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter x:Name="ContentHost"
                                          VerticalAlignment="Center"                                         
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainToolbarMouseOverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainToolbarToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource MainToolbarForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter x:Name="ContentHost"
                                          VerticalAlignment="Center"                                         
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainToolbarSelectedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainToolbarMouseOverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="{DynamicResource NavigationButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource NavigationButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Border x:Name="Border"
                                Visibility="Hidden"
                                CornerRadius="5"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"/>

                        <icons:PackIconMaterial Kind="Close"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Width="{TemplateBinding Width, Converter={StaticResource IconSizeConverter}}"
                                                Height="{TemplateBinding Height, Converter={StaticResource IconSizeConverter}}"
                                                Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource NavigationButtonMouseOverForegroundBrush}"/>
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TipsGotItButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MainThemeSolidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainThemeSolidBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                            UseLayoutRounding="True"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter x:Name="ContentHost"
                                          VerticalAlignment="Center"                                         
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainThemeSolidBrush}"/>
                            <Setter Property="Foreground" Value="#F000"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ShowcaseExampleButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#30000000"/>
        <Setter Property="BorderBrush" Value="#AC101010"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Border x:Name="MouseOverBorder"      
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">

                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.300"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.300"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>